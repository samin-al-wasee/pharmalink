openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/v1/medicines/brands/:
    get:
      operationId: listMedicineBrands
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MedicineBrand'
          description: ''
      tags:
      - api
  /api/v1/medicines/generics/:
    get:
      operationId: listMedicineGenerics
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MedicineGeneric'
          description: ''
      tags:
      - api
  /api/v1/accounts/me/messages/:
    get:
      operationId: listMessages
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
          description: ''
      tags:
      - api
  /api/v1/organizations/{org_uuid}/services/messages/:
    get:
      operationId: listMessages
      description: ''
      parameters:
      - name: org_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
          description: ''
      tags:
      - api
  /api/v1/accounts/me:
    get:
      operationId: retrieveUser
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/v1/organizations/:
    get:
      operationId: listOrganizations
      description: 'Return all active organizations regardless of owner.

        Create organization for authenticated user.'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
          description: ''
      tags:
      - api
    post:
      operationId: createOrganization
      description: 'Return all active organizations regardless of owner.

        Create organization for authenticated user.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organization'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
      tags:
      - api
  /api/v1/organizations/owned/:
    get:
      operationId: listOrganizations
      description: Return only owned organizations by authenticated user regardless
        of status.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
          description: ''
      tags:
      - api
  /api/v1/organizations/{org_uuid}:
    get:
      operationId: retrieveOrganization
      description: ''
      parameters:
      - name: org_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
      tags:
      - api
    put:
      operationId: updateOrganization
      description: ''
      parameters:
      - name: org_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organization'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateOrganization
      description: ''
      parameters:
      - name: org_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organization'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyOrganization
      description: ''
      parameters:
      - name: org_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/organizations/{org_uuid}/medicines/:
    get:
      operationId: listMedicineBrands
      description: ''
      parameters:
      - name: org_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MedicineBrand'
          description: ''
      tags:
      - api
    post:
      operationId: createMedicineBrand
      description: ''
      parameters:
      - name: org_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicineBrand'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MedicineBrand'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MedicineBrand'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicineBrand'
          description: ''
      tags:
      - api
  /api/v1/organizations/{org_uuid}/medicines/{med_slug}:
    get:
      operationId: retrieveMedicineBrand
      description: ''
      parameters:
      - name: org_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: med_slug
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicineBrand'
          description: ''
      tags:
      - api
    put:
      operationId: updateMedicineBrand
      description: ''
      parameters:
      - name: org_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: med_slug
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicineBrand'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MedicineBrand'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MedicineBrand'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicineBrand'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateMedicineBrand
      description: ''
      parameters:
      - name: org_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: med_slug
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicineBrand'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MedicineBrand'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MedicineBrand'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicineBrand'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyMedicineBrand
      description: ''
      parameters:
      - name: org_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: med_slug
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/organizations/{org_uuid}/services/feedbacks/:
    get:
      operationId: listFeedbacks
      description: ''
      parameters:
      - name: org_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feedback'
          description: ''
      tags:
      - api
    post:
      operationId: createFeedback
      description: ''
      parameters:
      - name: org_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feedback'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Feedback'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Feedback'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
          description: ''
      tags:
      - api
  /api/v1/organizations/{org_uuid}/users/:
    get:
      operationId: listOrganizationUserSerializerForOwners
      description: ''
      parameters:
      - name: org_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUserForOwner'
          description: ''
      tags:
      - api
    post:
      operationId: createOrganizationUserSerializerForOwner
      description: ''
      parameters:
      - name: org_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUserForOwner'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationUserForOwner'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationUserForOwner'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUserForOwner'
          description: ''
      tags:
      - api
  /api/v1/organizations/{org_uuid}/users/{user_uuid}:
    get:
      operationId: retrieveOrganizationUserBase
      description: ''
      parameters:
      - name: org_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: user_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUserBase'
          description: ''
      tags:
      - api
    put:
      operationId: updateOrganizationUserBase
      description: ''
      parameters:
      - name: org_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: user_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUserBase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationUserBase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationUserBase'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUserBase'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateOrganizationUserBase
      description: ''
      parameters:
      - name: org_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: user_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUserBase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationUserBase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationUserBase'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUserBase'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyOrganizationUserBase
      description: ''
      parameters:
      - name: org_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: user_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/accounts/me/messages/{org_uuid}/:
    post:
      operationId: createMessage
      description: ''
      parameters:
      - name: org_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Message'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
      tags:
      - api
  /api/v1/organizations/{org_uuid}/services/messages/{user_uuid}/:
    post:
      operationId: createMessage
      description: ''
      parameters:
      - name: org_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: user_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Message'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
      tags:
      - api
  /api/v1/accounts/register:
    post:
      operationId: createUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/v1/accounts/token/obtain:
    post:
      operationId: createTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - api
  /api/v1/accounts/token/refresh:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - api
  /api/v1/organizations/join:
    post:
      operationId: createOrganizationUserSerializerForUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUserForUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationUserForUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationUserForUser'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUserForUser'
          description: ''
      tags:
      - api
  /api/v1/organizations/{org_uuid}/services/prescriptions/:
    post:
      operationId: createPrescription
      description: ''
      parameters:
      - name: org_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Prescription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Prescription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Prescription'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prescription'
          description: ''
      tags:
      - api
  /api/v1/organizations/{org_uuid}/services/prescriptions/prescribed/:
    post:
      operationId: createPrescription
      description: ''
      parameters:
      - name: org_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Prescription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Prescription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Prescription'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prescription'
          description: ''
      tags:
      - api
  /api/v1/organizations/{org_uuid}/services/prescriptions/received/:
    post:
      operationId: createPrescription
      description: ''
      parameters:
      - name: org_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Prescription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Prescription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Prescription'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prescription'
          description: ''
      tags:
      - api
components:
  schemas:
    MedicineBrand:
      type: object
      properties:
        name:
          type: string
          maxLength: 128
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        manufacturer:
          type: string
          readOnly: true
        generic:
          type: string
        dosage_forms_write_only:
          type: array
          items: {}
          writeOnly: true
        dosage_forms:
          type: string
          readOnly: true
      required:
      - name
      - generic
      - dosage_forms_write_only
    MedicineGeneric:
      type: object
      properties:
        name:
          type: string
          maxLength: 128
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        pharmacology:
          type: string
        indications:
          type: string
        interactions:
          type: string
        side_effects:
          type: string
      required:
      - name
    Message:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        content:
          type: string
        user:
          type: string
          readOnly: true
        organization:
          type: string
          readOnly: true
      required:
      - content
    User:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          description: Required. 128 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 128
          minLength: 8
        email:
          type: string
          format: email
          description: Required. 128 characters or fewer.
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 128
        repeated_password:
          type: string
          writeOnly: true
          maxLength: 128
          minLength: 8
        name:
          type: string
          maxLength: 128
        photo:
          type: string
          format: binary
          nullable: true
        height_cm:
          type: integer
        weight_kg:
          type: integer
        blood_group:
          enum:
          - A+
          - A-
          - B+
          - B-
          - AB+
          - AB-
          - O+
          - O-
          - U
          type: string
        gender:
          enum:
          - M
          - F
          - O
          - U
          type: string
        date_of_birth:
          type: string
          format: date
          nullable: true
        address:
          type: object
          properties:
            unit_no:
              type: string
              maxLength: 128
            street_no:
              type: string
              maxLength: 128
            line_1:
              type: string
              maxLength: 128
            line_2:
              type: string
              maxLength: 128
            city:
              type: string
              maxLength: 128
            region:
              type: string
              maxLength: 128
            postal_code:
              type: string
              maxLength: 128
            country:
              enum:
              - AF
              - AX
              - AL
              - DZ
              - AS
              - AD
              - AO
              - AI
              - AQ
              - AG
              - AR
              - AM
              - AW
              - AU
              - AT
              - AZ
              - BS
              - BH
              - BD
              - BB
              - BY
              - BE
              - BZ
              - BJ
              - BM
              - BT
              - BO
              - BQ
              - BA
              - BW
              - BV
              - BR
              - IO
              - BN
              - BG
              - BF
              - BI
              - CV
              - KH
              - CM
              - CA
              - KY
              - CF
              - TD
              - CL
              - CN
              - CX
              - CC
              - CO
              - KM
              - CG
              - CD
              - CK
              - CR
              - CI
              - HR
              - CU
              - CW
              - CY
              - CZ
              - DK
              - DJ
              - DM
              - DO
              - EC
              - EG
              - SV
              - GQ
              - ER
              - EE
              - SZ
              - ET
              - FK
              - FO
              - FJ
              - FI
              - FR
              - GF
              - PF
              - TF
              - GA
              - GM
              - GE
              - DE
              - GH
              - GI
              - GR
              - GL
              - GD
              - GP
              - GU
              - GT
              - GG
              - GN
              - GW
              - GY
              - HT
              - HM
              - VA
              - HN
              - HK
              - HU
              - IS
              - IN
              - ID
              - IR
              - IQ
              - IE
              - IM
              - IL
              - IT
              - JM
              - JP
              - JE
              - JO
              - KZ
              - KE
              - KI
              - KW
              - KG
              - LA
              - LV
              - LB
              - LS
              - LR
              - LY
              - LI
              - LT
              - LU
              - MO
              - MG
              - MW
              - MY
              - MV
              - ML
              - MT
              - MH
              - MQ
              - MR
              - MU
              - YT
              - MX
              - FM
              - MD
              - MC
              - MN
              - ME
              - MS
              - MA
              - MZ
              - MM
              - NA
              - NR
              - NP
              - NL
              - NC
              - NZ
              - NI
              - NE
              - NG
              - NU
              - NF
              - KP
              - MK
              - MP
              - 'NO'
              - OM
              - PK
              - PW
              - PS
              - PA
              - PG
              - PY
              - PE
              - PH
              - PN
              - PL
              - PT
              - PR
              - QA
              - RE
              - RO
              - RU
              - RW
              - BL
              - SH
              - KN
              - LC
              - MF
              - PM
              - VC
              - WS
              - SM
              - ST
              - SA
              - SN
              - RS
              - SC
              - SL
              - SG
              - SX
              - SK
              - SI
              - SB
              - SO
              - ZA
              - GS
              - KR
              - SS
              - ES
              - LK
              - SD
              - SR
              - SJ
              - SE
              - CH
              - SY
              - TW
              - TJ
              - TZ
              - TH
              - TL
              - TG
              - TK
              - TO
              - TT
              - TN
              - TR
              - TM
              - TC
              - TV
              - UG
              - UA
              - AE
              - GB
              - UM
              - US
              - UY
              - UZ
              - VU
              - VE
              - VN
              - VG
              - VI
              - WF
              - EH
              - YE
              - ZM
              - ZW
              type: string
          required:
          - city
          - postal_code
          - country
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        is_superuser:
          type: boolean
          readOnly: true
          description: Designates that this user has all permissions without explicitly
            assigning them.
      required:
      - username
      - email
      - password
      - repeated_password
      - name
    Organization:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 128
        email:
          type: string
          format: email
          description: Required. 128 characters or fewer.
          maxLength: 254
        information:
          type: string
        status:
          enum:
          - A
          - I
          - U
          type: string
        address:
          type: object
          properties:
            unit_no:
              type: string
              maxLength: 128
            street_no:
              type: string
              maxLength: 128
            line_1:
              type: string
              maxLength: 128
            line_2:
              type: string
              maxLength: 128
            city:
              type: string
              maxLength: 128
            region:
              type: string
              maxLength: 128
            postal_code:
              type: string
              maxLength: 128
            country:
              enum:
              - AF
              - AX
              - AL
              - DZ
              - AS
              - AD
              - AO
              - AI
              - AQ
              - AG
              - AR
              - AM
              - AW
              - AU
              - AT
              - AZ
              - BS
              - BH
              - BD
              - BB
              - BY
              - BE
              - BZ
              - BJ
              - BM
              - BT
              - BO
              - BQ
              - BA
              - BW
              - BV
              - BR
              - IO
              - BN
              - BG
              - BF
              - BI
              - CV
              - KH
              - CM
              - CA
              - KY
              - CF
              - TD
              - CL
              - CN
              - CX
              - CC
              - CO
              - KM
              - CG
              - CD
              - CK
              - CR
              - CI
              - HR
              - CU
              - CW
              - CY
              - CZ
              - DK
              - DJ
              - DM
              - DO
              - EC
              - EG
              - SV
              - GQ
              - ER
              - EE
              - SZ
              - ET
              - FK
              - FO
              - FJ
              - FI
              - FR
              - GF
              - PF
              - TF
              - GA
              - GM
              - GE
              - DE
              - GH
              - GI
              - GR
              - GL
              - GD
              - GP
              - GU
              - GT
              - GG
              - GN
              - GW
              - GY
              - HT
              - HM
              - VA
              - HN
              - HK
              - HU
              - IS
              - IN
              - ID
              - IR
              - IQ
              - IE
              - IM
              - IL
              - IT
              - JM
              - JP
              - JE
              - JO
              - KZ
              - KE
              - KI
              - KW
              - KG
              - LA
              - LV
              - LB
              - LS
              - LR
              - LY
              - LI
              - LT
              - LU
              - MO
              - MG
              - MW
              - MY
              - MV
              - ML
              - MT
              - MH
              - MQ
              - MR
              - MU
              - YT
              - MX
              - FM
              - MD
              - MC
              - MN
              - ME
              - MS
              - MA
              - MZ
              - MM
              - NA
              - NR
              - NP
              - NL
              - NC
              - NZ
              - NI
              - NE
              - NG
              - NU
              - NF
              - KP
              - MK
              - MP
              - 'NO'
              - OM
              - PK
              - PW
              - PS
              - PA
              - PG
              - PY
              - PE
              - PH
              - PN
              - PL
              - PT
              - PR
              - QA
              - RE
              - RO
              - RU
              - RW
              - BL
              - SH
              - KN
              - LC
              - MF
              - PM
              - VC
              - WS
              - SM
              - ST
              - SA
              - SN
              - RS
              - SC
              - SL
              - SG
              - SX
              - SK
              - SI
              - SB
              - SO
              - ZA
              - GS
              - KR
              - SS
              - ES
              - LK
              - SD
              - SR
              - SJ
              - SE
              - CH
              - SY
              - TW
              - TJ
              - TZ
              - TH
              - TL
              - TG
              - TK
              - TO
              - TT
              - TN
              - TR
              - TM
              - TC
              - TV
              - UG
              - UA
              - AE
              - GB
              - UM
              - US
              - UY
              - UZ
              - VU
              - VE
              - VN
              - VG
              - VI
              - WF
              - EH
              - YE
              - ZM
              - ZW
              type: string
          required:
          - city
          - postal_code
          - country
          nullable: true
        owner:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - name
      - email
    Feedback:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        content:
          type: string
        rating:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          type: integer
        user:
          type: string
          readOnly: true
        organization:
          type: string
          readOnly: true
      required:
      - content
      - rating
    OrganizationUserForOwner:
      type: object
      properties:
        organization:
          type: string
          readOnly: true
        user:
          type: string
        role:
          enum:
          - S
          - D
          - P
          - O
          type: string
      required:
      - user
    OrganizationUserBase:
      type: object
      properties:
        organization:
          type: string
          readOnly: true
        user:
          type: string
          readOnly: true
        role:
          enum:
          - S
          - D
          - P
          - O
          type: string
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - refresh
    OrganizationUserForUser:
      type: object
      properties:
        organization:
          type: string
        user:
          type: string
          readOnly: true
        role:
          enum:
          - S
          - D
          - P
          - O
          type: string
      required:
      - organization
    Prescription:
      type: object
      properties:
        doctor:
          type: string
          readOnly: true
        patient:
          type: string
          readOnly: true
        patient_uuid:
          type: string
          format: uuid
          writeOnly: true
        done:
          type: boolean
        prescribed_medicines:
          type: array
          items:
            type: object
            properties:
              prescription:
                type: string
                readOnly: true
              brand:
                type: integer
              instructions:
                type: string
            required:
            - brand
            - instructions
      required:
      - patient_uuid
      - done
      - prescribed_medicines
